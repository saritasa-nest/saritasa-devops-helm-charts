# Default values for grafana-dashboards.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# you should define target directories for dashboards in configuration kube-prometheus-stack
# grafana:
#   dashboardProviders:
#     dashboardproviders.yaml:
#       apiVersion: 1
#       providers:
#         - name: 'ingress-nginx'
#           orgId: 1
#           type: file
#           folder: 'ingress-nginx'
#           disableDeletion: true
#           editable: false
#           allowUiUpdates: false
#           options:
#             path: /tmp/dashboards/ingress-nginx/

alerts:
  # -- if you want to enable alerts dashboards
  enabled: true
  # -- namespace where configmaps for alerts dashboards should be created
  namespace: grafana
  # -- directory where alerts dashboards will be installed
  targetDirectory: /tmp/dashboards/alerts/
  # -- provision `Alertmanager` dashboard
  alertmanager: true

aws:
  # -- if you want to enable aws dashboards
  enabled: true
  # -- namespace where configmaps for aws dashboards should be created
  namespace: grafana
  # -- directory where aws dashboards will be installed
  targetDirectory: /tmp/dashboards/aws/
  # -- provision `AWS Billing Dashboard` dashboard
  billing: true
  # -- provision `Amazon CloudWatch Logs` dashboard
  cloudwatchLogs: true
  # -- provision `AWS CNI Metrics` dashboard
  cniMetrics: true
  # -- provision `Amazon EBS` dashboard
  ebs: true
  # -- provision `AWS EC2` dashboard
  ec2: true
  # -- provision `AWS Lambda` dashboard
  lambda: true
  # -- provision `Amazon RDS` dashboard
  rds: true
  # -- provision `AWS Route 53` dashboard
  route53: true
  # -- provision `AWS SES` dashboard
  ses: true
  # -- provision `AWS SQS` dashboard
  sqs: true

cicd:
  # -- if you want to enable cicd dashboards
  enabled: true
  # -- namespace where configmaps for cicd dashboards should be created
  namespace: grafana
  # -- directory where cicd dashboards will be installed
  targetDirectory: /tmp/dashboards/cicd/
  # -- provision `ArgoCD` dashboard
  argocd: true

databases:
  # -- if you want to enable databases dashboards
  enabled: true
  # -- namespace where configmaps for databases dashboards should be created
  namespace: grafana
  # -- directory where databases dashboards will be installed
  targetDirectory: /tmp/dashboards/databases/
  # -- provision `MySQL Instance Summary` dashboard
  mysql: true
  # -- provision `PostgreSQL Database` dashboard
  postgresql: true

default:
  # -- if you want to enable default dashboards
  enabled: true
  # -- namespace where configmaps for default dashboards should be created
  namespace: grafana
  # -- directory where default dashboards will be installed
  targetDirectory: /tmp/dashboards/default/
  # -- provision `Generic Service Metrics` dashboard
  genericServiceMetrics: true
  # -- provision `Home` dashboard
  home: true

ingressNginx:
  # -- if you want to enable ingress-nginx dashboards
  enabled: true
  # -- namespace where configmaps for ingress-nginx dashboards should be created
  namespace: grafana
  # -- directory where ingress-nginx dashboards will be installed
  targetDirectory: /tmp/dashboards/ingress-nginx/
  # -- provision `NGINX Ingress controller` dashboard
  controller: true
  # -- provision `NGINX Ingress controller - Loki` dashboard
  controllerLoki: true
  # -- provision `Request Handling Performance` dashboard
  requestHandlingPerformance: true

istio:
  # -- if you want to enable istio dashboards
  enabled: true
  # -- namespace where configmaps for istio dashboards should be created
  namespace: grafana
  # -- directory where istio dashboards will be installed
  targetDirectory: /tmp/dashboards/istio/
  # -- provision `Istio Control Plane Dashboard` dashboard
  controlPlane: true
  # -- provision `Istio Mesh Dashboard` dashboard
  mesh: true
  # -- provision `Istio Performance Dashboard` dashboard
  performance: true
  # -- provision `Istio Service Dashboard` dashboard
  service: true
  # -- provision `Istio Wasm Extension Dashboard` dashboard
  wasmExtension: true
  # -- provision `Istio Workload Dashboard` dashboard
  workload: true

knative:
  # -- if you want to enable knative dashboards
  enabled: true
  # -- namespace where configmaps for knative dashboards should be created
  namespace: grafana
  # -- directory where knative dashboards will be installed
  targetDirectory: /tmp/dashboards/knative/
  # -- provision `Knative Eventing - Broker/Trigger` dashboard
  eventingBrokerTrigger: true
  # -- provision `Knative Eventing - Source` dashboard
  eventingSource: true
  # -- provision `Knative - Reconciler` dashboard
  reconciler: true
  # -- provision `Knative Serving - Control Plane Efficiency` dashboard
  servingControlPlaneEfficiency: true
  # -- provision `Knative Serving - Revision CPU and Memory Usage` dashboard
  servingRevisionCpuMemoryUsage: true
  # -- provision `Knative Serving - Revision HTTP Requests` dashboard
  servingRevisionHttpRequests: true
  # -- provision `Knative Serving - Scaling Debugging` dashboard
  servingScalingDebugging: true

kubernetes:
  # -- if you want to enable kubernetes dashboards
  enabled: true
  # -- namespace where configmaps for kubernetes dashboards should be created
  namespace: grafana
  # -- directory where kubernetes dashboards will be installed
  targetDirectory: /tmp/dashboards/kubernetes/
  # -- provision `Kubernetes - Cluster Monitoring` dashboard
  clusterMonitoring: true
  # -- provision `Kubernetes - Cluster Overall Dashboard` dashboard
  clusterOverall: true
  # -- provision `Kubernetes - Cluster Overview` dashboard
  clusterOverview: true
  # -- provision `Kubernetes Event Exporter` dashboard
  eventExporter: true
  # -- provision `Node Exporter Full` dashboard
  nodeExporterFull: true
