apiVersion: v2
name: terraform-pod

type: application

# This is the chart version. This version number should be incremented each time you make changes
# to the chart and its templates, including the app version.
# Versions are expected to follow Semantic Versioning (https://semver.org/)
version: 0.0.7-bump

maintainers:
  - url: https://www.saritasa.com/
    name: Saritasa

# This is the version number of the application being deployed. This version number should be
# incremented each time you make changes to the application. Versions are not expected to
# follow Semantic Versioning. They should reflect the version the application is using.
# It is recommended to use it with quotes.
appVersion: "1.3.5"

description: |
  A Helm chart for running infra-dev-aws solutions

  ## Install the chart

  Install the chart:

  ```
  helm repo add saritasa https://saritasa-nest.github.io/saritasa-devops-helm-charts/
  ```

  ## Use

  ### Simple case (infra-dev-aws)

  ```sh
  helm upgrade --install CLIENT saritasa/terraform-pod \
    --namespace terraform \
    --set terraform.client=CLIENT \
    --set image.tag=1.3.5 \
    --set github.repository=saritasa-nest/CLIENT-infra-dev-aws \
    --set github.branch=feature/branch \
    --set github.username=YOUR-GITHUB-USERNAME \
    --set github.email=YOUR-GITHUB-EMAIL \
    --set gitCryptKey=$(base64 -w 0 git-crypt-key) \
    --wait
  ```

  ### Passing aws-vault short-term credentials (infra-aws)

  For infra-aws repos you may want to pass short-term TTL AWS credentials from the aws-vault
  ```sh
  (
    unset AWS_VAULT && creds=$(aws-vault exec saritasa/v2/administrators --json) && \
    helm upgrade --install CLIENT saritasa/terraform-pod \
      --namespace terraform \
      --set terraform.client=CLIENT \
      --set image.tag=1.3.5 \
      --set github.repository=saritasa-nest/CLIENT-infra-aws \
      --set github.branch=feature/branch \
      --set github.username=YOUR-GITHUB-USERNAME \
      --set github.email=YOUR-GITHUB-EMAIL \
      --set gitCryptKey=$(base64 -w 0 path/to/git-crypt-key) \
      --set terraform.token=xxx \
      --set aws.accessKeyId=$(echo $creds | jq -r ".AccessKeyId") \
      --set aws.secretAccessKey=$(echo $creds | jq -r ".SecretAccessKey") \
      --set aws.sessionToken="$(echo $creds | jq -r ".SessionToken")" \
      --set infracost.enabled=true \
      --set terraform.initCommand="make _staging init" \
      --wait && \
    unset creds
  )
  ```

  Run command as shown in `()`` so that creds are not exported in your local shell.

  ## Terminate

  ```sh
  helm delete CLIENT
  ````

  ## Debug

  If you want to debug the helm chart (after the improvements) you can perform the following

  ```sh
  (
  unset AWS_VAULT && creds=$(aws-vault exec saritasa/v2/administrators --json) && \
  helm template --release-name debug-tfpod \
      --namespace terraform \
      --set terraform.client=saritasa \
      --set image.tag=1.3.5 \
      --set github.repository=saritasa-nest/some-repo-infra-aws \
      --set github.branch=feature/branch-name \
      --set github.username=your-username \
      --set github.email=your-email \
      --set gitCryptKey=$(base64 -w 0 git-crypt-key) \
      --set aws.accessKeyId="$(echo $creds | jq -r ".AccessKeyId")" \
      --set aws.secretAccessKey="$(echo $creds | jq -r ".SecretAccessKey")" \
      --set aws.sessionToken="$(echo $creds | jq -r ".SessionToken")" \
      --set infracost.enabled=true \
      --set terraform.initCommand="make _staging init" \
      . | k apply -f- && \
  unset creds
  )
  ```
