{{ if .Values.apps }}
{{- range $project := .Values.apps }}
{{- if $project.enabled }}
{{- range $component := $project.components }}
{{- if not (hasKey $component "wordpress") }}

# initialize `projectEnvironment` variable with either `$project.environment` if it exists or with `$.Values.environment` otherwise
{{ $projectEnvironment := ternary $project.environment $.Values.environment (hasKey $project "environment") -}}

{{- $data := dict "project"           $project
                  "component"         $component
                  "environment"       $projectEnvironment }}

# initialize `argocd` variable with either `$component.argocd` dict if it exists or with empty dict
{{ $argocd := ternary $component.argocd dict (hasKey $component "argocd") -}}

# initialize `argocdSource` variable with either `$argocd.source` dict if it exists or with empty dict
{{ $argocdSource := ternary $argocd.source dict (hasKey $argocd "source") -}}

# ========================================================================
# ðŸŒ± {{ $project.project | upper }}/{{ $component.name | upper }} COMPONENT TRIGGER BINDING
# ========================================================================
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name:  {{ include "tekton-apps.resourceName" $data }}-env
  namespace: {{ $.Release.Namespace }}
spec:
  params:
  - name: application
    value: {{ or $argocd.appName (include "tekton-apps.resourceName" $data) }}
  - name: project
    value: {{ $project.project }}
  - name: component
    value: {{ $component.name }}
  - name: repository_submodules
    value: "{{ $component.repository_submodules | default true }}"
  {{- include "tekton-apps.get-triggerbinding-value-or-default" (dict "triggerBinding" $component.triggerBinding "name" "environment" "default" $projectEnvironment ) | nindent 2 }}
  {{- if $.Values.defaultRegistry }}
  - name: docker_registry
    value: {{ $.Values.defaultRegistry }}
  {{- end }}
  {{- toYaml $component.triggerBinding | nindent 2 }}

  {{- if $argocdSource }}
  # ! OLD WAY:
  # If you see this message - pls transfer kubernetes manifests into dedicated kubernetes git repo
  # if we want to support old ways when our kubernetes manifests where specifically declared inside
  # actual backend or frontend repos. In new approach we have isolated kubernetes repository with manifests
  - name: kubernetes_repository_ssh_url
    value: {{ $argocdSource.repoUrl | default ($project.kubernetesRepository).url }}
  - name: kubernetes_branch
    value: {{ $argocdSource.targetRevision | default ($project.kubernetesRepository).branch }}
  - name: kubernetes_repository_kustomize_path
    value: {{ $argocdSource.path | default (printf "apps/%s/manifests/%s" $component.name $projectEnvironment) }}
  {{- else }}
  # defaults
  - name: kubernetes_repository_ssh_url
    value: {{ $project.kubernetesRepository.url }}
  {{- include "tekton-apps.get-triggerbinding-value-or-default" (dict "triggerBinding" $component.triggerBinding "name" "kubernetes_branch" "default" ($project.kubernetesRepository).branch ) | nindent 2 }}
  {{- include "tekton-apps.get-triggerbinding-value-or-default" (dict "triggerBinding" $component.triggerBinding "name" "kubernetes_repository_kustomize_path" "default" (printf "apps/%s/manifests/%s" $component.name $projectEnvironment) ) | nindent 2 }}
  {{- include "tekton-apps.get-triggerbinding-value-or-default" (dict "triggerBinding" $component.triggerBinding "name" "source_subpath" "default" "." ) | nindent 2 }}
  {{- include "tekton-apps.get-triggerbinding-value-or-default" (dict "triggerBinding" $component.triggerBinding "name" "buildpack_config_filename" "default" "buildpack.yml" ) | nindent 2 }}
  {{- include "tekton-apps.get-triggerbinding-value-or-default" (dict "triggerBinding" $component.triggerBinding "name" "project_config_filename" "default" "project.toml" ) | nindent 2 }}
  {{- include "tekton-apps.get-triggerbinding-value-or-default" (dict "triggerBinding" $component.triggerBinding "name" "sentry_project_name" "default" (printf "%s-%s" $project.project $component.name) ) | nindent 2 }}
  {{- end}}
---

{{- end }} # if not component.wordpress
{{- end }} # range component
{{- end }} # if project.enabled
{{- end }} # range
{{- end }} # if apps
