{{ if .Values.apps }}
{{- range $project := .Values.apps }}

{{- if $project.enabled }}
{{- range $component := $project.components }}

# initialize `projectEnvironment` variable with either `$project.environment` if it exists or with `$.Values.environment` otherwise
{{ $projectEnvironment := ternary $project.environment $.Values.environment (hasKey $project "environment") -}}

{{- $data := dict "project"           $project
                  "component"         $component
                  "environment"       $projectEnvironment }}

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
 name: {{ include "tekton-apps.resourceName" (set $data "suffix" "build-pipeline-role") }}
 namespace: {{ include "tekton-apps.set-namespace-from-component-or-project" (dict "component" $component "project" $project "component_name" "component") }}
rules:
  - apiGroups:  ["extensions", "apps", "batch", ""]
    resources:  ["services", "deployments", "pods", "jobs", "pods/log"]
    verbs:      ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups:  [""]
    resources:  ["pods/log"]
    verbs:      ["get", "list", "watch"]
  - apiGroups:  ["tekton.dev"]
    resources:  ["pipelineruns"]
    verbs:      ["get", "list", "create"]

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
 name: {{ include "tekton-apps.resourceName" (set $data "suffix" "trigger-role") }}
 # We don't need to use the tekton-apps.set-namespace-from-component-or-project snippet here and below (like we do for wordpress) because these objects are not used in other namespaces
 namespace: {{ $.Release.Namespace }}
rules:
  - apiGroups:  ["triggers.tekton.dev"]
    resources:  ["eventlisteners", "triggerbindings", "triggertemplates", "clusterinterceptors"]
    verbs:      ["get", "list", "watch", "create", "update", "patch", "delete"]

  - apiGroups:  ["triggers.tekton.dev"]
    resources:  ["triggers", "clustertriggerbindings"]
    verbs:      ["get", "list", "watch"]

  - apiGroups:  ["tekton.dev"]
    resources:  ["pipelineruns", "pipelineresources", "taskruns"]
    verbs:      ["create"]

  - apiGroups:  ["extensions"]
    resources:  ["ingresses"]
    verbs:      ["get", "list", "watch", "create", "update", "patch", "delete"]

  - apiGroups:  [""]
    resources:  ["configmaps", "secrets", "serviceaccounts"]
    verbs:      ["get", "list", "watch", "impersonate"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "build-pipeline-role-binding") }}
  namespace: {{ $.Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "build-pipeline-role") }}
subjects:
- kind: ServiceAccount
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "build-pipeline-sa") }}
  namespace: {{ $.Release.Namespace }}
- kind: ServiceAccount
  name: build-bot-sa
  namespace: {{ $.Release.Namespace }}

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "trigger-role-binding") }}
  namespace: {{ $.Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "trigger-role") }}
subjects:
- kind: ServiceAccount
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "trigger-sa") }}
  namespace: {{ $.Release.Namespace }}
- kind: ServiceAccount
  name: build-bot-sa
  namespace: {{ $.Release.Namespace }}

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
 name: {{ include "tekton-apps.resourceName" (set $data "suffix" "triggger-cluster-role") }}
rules:
  - apiGroups: ["triggers.tekton.dev"]
    resources: ["clustertriggerbindings", "clusterinterceptors"]
    verbs: ["get", "list", "watch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "triggger-cluster-role-binding") }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "triggger-cluster-role") }}
subjects:
- kind: ServiceAccount
  name: {{ include "tekton-apps.resourceName" (set $data "suffix" "trigger-sa") }}
  namespace: {{ $.Release.Namespace }}
- kind: ServiceAccount
  name: build-bot-sa
  namespace: {{ $.Release.Namespace }}

---

{{- end }} # range component
{{- end }} # if project.enabled
{{- end }} # range project
{{- end }} # if apps
