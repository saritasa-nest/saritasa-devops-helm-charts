{{- if .Values.apps }}
{{- range $project := .Values.apps }}
{{- if $project.enabled }}
{{- range $component := $project.components }}
{{ with $component.wordpress }}
# initialize `projectEnvironment` variable with either `$project.environment` if it exists
# or with `$.Values.environment` otherwise
{{- $projectEnvironment := $project.environment | default $.Values.environment  -}}
# initialize `argocd` variable with either `$component.argocd` dict if it exists or with empty dict
{{- $argocd := $component.argocd | default dict }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ $argocd.appName | default (printf "%s-%s-%s" $project.project $component.name $projectEnvironment) }}
  namespace: argo-cd
  annotations:
    argocd.argoproj.io/sync-wave: {{ $argocd.syncWave | default "210" | quote }}
    jiraURL: {{ $project.jiraURL }}
spec:
  destination:
    namespace: {{ $project.argocd.namespace | required ".argocd.namespace is required in project settings"}}
    server: https://kubernetes.default.svc
  ignoreDifferences:
    - group: v1
      kind: secret
      jsonPointers:
        - /metadata/labels
    {{- if $argocd.ignoreDeploymentReplicasDiff }}
    - group: apps
      kind: Deployment
      jsonPointers:
        - /spec/replicas
    {{- end }}
  project: {{ $project.project }}
  source:
    chart: wordpress
    helm:
      values: |
        image:
          repository: bitnami/wordpress
          tag: {{ (.image).tag | default "6.1.1" }}
          debug: {{ (.image).debug | default "true" }}

        resources:
        {{- if .resources }}
          {{- toYaml .resources | nindent 10 }}
        {{- else }}
          requests:
            cpu: 100m
            memory: 128Mi
        {{- end }}

        commonLabels:
        {{- if .commonLabels }}
          {{- toYaml .commonLabels | nindent 10 }}
        {{- else }}
          tech_stack: php
          application: wordpress
        {{- end }}

        updateStrategy:
        {{- if .updateStrategy }}
          {{- toYaml .updateStrategy | nindent 10 }}
        {{- else }}
          type: RollingUpdate
          rollingUpdate:
            maxSurge: 0%
            maxUnavailable: 100%
        {{- end }}

        replicaCount: {{ .replicaCount | default 1}}

        nodeSelector:
        {{- if .nodeSelector }}
          {{- toYaml .nodeSelector | nindent 10 }}
        {{- else }}
          tech_stack: php
          pvc: "true"
        {{- end }}

        {{- if .podSecurityContext }}
        podSecurityContext:
          {{- toYaml .podSecurityContext | nindent 10 }}
        {{- end }}

        {{- if .containerSecurityContext }}
        containerSecurityContext:
          {{- toYaml .containerSecurityContext | nindent 10 }}
        {{- end }}

        {{- if not .initContainers }}
        initContainers:
          - name: install
            image: jnewland/git-and-stuff:v0.1.2
            imagePullPolicy: Always
            env:
              - name: HOME
                value: /home/app
            command:
              - bash
              - -c
              - |
                set -o errexit
                set -o nounset
                set -o pipefail
                #set -o xtrace
                # wp app persitent volume
                WP_ROOT=/bitnami/wordpress
                # bool condition to copy wp app files on persistent volume
                COPY_WP_CONF="{{ and .repositoryUseWPConfig (not .existingWordPressConfigurationSecret) | default "false"}}"
                # git repo url with wp app files
                URL="{{ .repositorySshUrl | required "Missed .wordpress.repositorySshUrl option"}}"
                #  tag or branch of target git repo that will be used for persistent deployment
                REVISION="{{ .repositoryRevision | default "" }}"
                #--------------------------------------------------------------------
                # chart does not start wp setup if WP_ROOT is not empty
                if [[ ! -d $WP_ROOT/wp-content && $COPY_WP_CONF == "false" ]]; then
                  echo "WP not initialized, skipping"
                #--------------------------------------------------------------------
                else
                  # clone wordpress distribution from repo
                  git -c core.sshCommand="ssh -i $HOME/.ssh/id_rsa" clone $URL /tmp/wordpress
                  cd /tmp/wordpress
                  [[ -n $REVISION ]] && git checkout $REVISION
                  git_branch=$(git rev-parse --abbrev-ref HEAD)
                  git_log=$(git log --format="%h - by %an - %ae - %s" HEAD~1..HEAD)
                  msg="[$git_branch] $git_log"
                  printf "%0.s-" $(seq 1 ${#msg})
                  echo
                  echo "$msg"
                  printf "%0.s-" $(seq 1 ${#msg})
                  echo
                  cp -Rf /tmp/wordpress/wp-content $WP_ROOT/
                  [[ $COPY_WP_CONF == "true" ]] && cp -Rf  /tmp/wordpress/wp-config.php $WP_ROOT/ || echo "COPY_WP_CONF=$COPY_WP_CONF, ignoring"
                  ls -lan $WP_ROOT $WP_ROOT/wp-content
                  echo "Folder wp-content copied from git repo into bitnami/wordpress"
                  echo "Done INIT"
                fi
            volumeMounts:
            - mountPath: /bitnami/wordpress
              name: wordpress-data
              subPath: wordpress
            - mountPath: /home/app/.ssh/id_rsa
              name: ssh-key
              subPath: ssh-privatekey
            - mountPath: /home/app/.ssh/known_hosts
              name: github-known-hosts
              subPath: config.ssh
          {{- with .extraInitContainers }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- else }}
        initContainers:
          {{- toYaml .initContainers | nindent 10 }}
          {{- with .extraInitContainers }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- end }}


        extraVolumes:
          - name: ssh-key
            secret:
              secretName: {{ .repositoryDeployKey | default (printf "%s-%s-deploy-key" $project.project $component.name) }}
          - name: github-known-hosts
            configMap:
              name: github-known-hosts
          {{- if .extraVolumes }}
          {{- toYaml .extraVolumes | nindent 10 }}
          {{- end }}
        {{ if .extraVolumeMounts }}
        extraVolumeMounts:
        {{- toYaml .extraVolumeMounts | nindent 10 }}
        {{- end }}
        {{ if .extraEnvVars }}
        extraEnvVars:
        {{- toYaml .extraEnvVars | nindent 10 }}
        {{- end }}
        {{ if .extraEnvVarsSecret }}
        extraEnvVarsSecret: {{ .extraEnvVarsSecret }}
        {{- end }}

        livenessProbe:
          httpGet:
            path: /wp-admin/install.php
            port: 8080
            scheme: HTTP

        readinessProbe:
          enabled: true
          httpGet:
            path: /wp-admin/install.php
            port: 8080
            scheme: HTTP

        service:
          type: ClusterIP
          port: 8080

        {{- with .ingress }}
        ingress:
          enabled: true
          certManager: true
          hostname: {{ .hostname | default (printf "%s.saritasa.rocks" $project.project) }}
          annotations:
            kubernetes.io/ingress.class: "nginx"
            {{- if .basicAuth }}
            nginx.ingress.kubernetes.io/auth-type: basic
            nginx.ingress.kubernetes.io/auth-secret: {{ .authSecret | default (printf "%s-%s-%s-basic-auth" $project.project $component.name $projectEnvironment) }}
            nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
            {{- end }}
            {{- if .annotations }}
            {{- toYaml .annotations | nindent 12 }}
            {{- else }}
            cert-manager.io/cluster-issuer: "letsencrypt-prod"
            nginx.ingress.kubernetes.io/proxy-body-size: 100m
            nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
            nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "300"
            nginx.ingress.kubernetes.io/server-snippet: |-
              add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
            {{- if ne .restrictAccessByIp "false" }}
            nginx.ingress.kubernetes.io/satisfy: "any"
            nginx.ingress.kubernetes.io/whitelist-source-range: |
              {{- index $.Values.whitelistIP | nindent 14 }}
            {{- end }}
          {{- end }}
          tls: true
          {{- if .extraHosts }}
          extraHosts:
          {{- toYaml .extraHosts | nindent 12 }}
          {{- end }}
        {{- end }}

        {{- if .persistence }}
        persistence:
        {{- toYaml .persistence | nindent 10 }}
        {{- end }}

        metrics:
          enabled: true

        overrideDatabaseSettings: {{ if .repositoryUseWPConfig}}true{{ else }}{{ .overrideDatabaseSettings | default "false"}}{{ end }}

        wordpressSkipInstall: {{ .wordpressSkipInstall | default "false" }}
        existingWordPressConfigurationSecret: {{ .existingWordPressConfigurationSecret | default "" }}
        wordpressEmail: {{ .wordpressEmail | default (printf "devops+%s@saritasa.com" $project.project) }}
        wordpressBlogName: {{ .wordpressBlogName | default $project.project }}
        wordpressScheme: {{ .wordpressScheme | default "https" }}
        wordpressTablePrefix: {{ .wordpressTablePrefix | default "wp_" }}
        allowEmptyPassword: false
        {{ if .existingSecret }}
        existingSecret: {{ .existingSecret }}
        smtpExistingSecret: {{ .existingSecret }}
        {{- end }}
        smtpHost: {{ .smtpHost | default "mailhog.mailhog.svc.cluster.local" }}
        smtpPort: {{ .smtpHort | default 1025 }}
        smtpUser: {{ .smtpUser | default $project.project }}
        smtpPassword: {{ .smtpPassword | default "anypassword" }}
        {{ if .externalDatabase }}
        mariadb:
          enabled: false
        externalDatabase:
          {{- toYaml .externalDatabase | nindent 10 }}
        {{- end }}
        {{ if .wordpressExtraConfigContent }}
        wordpressExtraConfigContent:{{ toYaml .wordpressExtraConfigContent | indent 8 }}
        {{- end }}


    repoURL: {{ $argocd.source.repoUrl | default "https://charts.bitnami.com/bitnami" }}
    targetRevision: {{ $argocd.source.targetRevision | default "15.2.40" }}

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
{{- end }} # with component.wordpress
{{- end }} # range component
{{- end }} # if project.enabled and project.argocd
{{- end }} # range project
{{- end }} # with apps
