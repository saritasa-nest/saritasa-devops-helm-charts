apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: update-values-yaml-repository-revision
  namespace: {{ .Release.Namespace }}
spec:
  description: Update repositoryRevision in values.yaml and commit to Git
  params:
    - name: project
      type: string
      description: Project name (e.g., aaoa-staging)
    - name: component
      type: string
      description: Component name (e.g., wordpress)
    - name: repositoryRevision
      type: string
      description: Git branch/tag to set
    - name: kubernetes_branch
      type: string
      description: Kubernetes repo branch to commit to
  workspaces:
    - name: source
      description: Workspace with kubernetes repository
  steps:
    - name: update-values
      image: alpine/git:latest
      workingDir: $(workspaces.source.path)/gitops
      script: |
        #!/bin/sh
        set -e
        
        PROJECT="$(params.project)"
        COMPONENT="$(params.component)"
        REVISION="$(params.repositoryRevision)"
        BRANCH="$(params.kubernetes_branch)"
        
        echo "Updating repositoryRevision to: $REVISION"
        echo "Project: $PROJECT, Component: $COMPONENT"
        
        # Install yq
        wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        chmod +x /usr/local/bin/yq
        
        # Find values.yaml path
        VALUES_FILE="staging/argocd/apps/values.yaml"
        
        if [ ! -f "$VALUES_FILE" ]; then
          echo "ERROR: $VALUES_FILE not found"
          exit 1
        fi
        
        # Update repositoryRevision for the specific project/component
        # Path: .apps[].components[].wordpress.repositoryRevision
        yq eval "(.apps[] | select(.name == \"$PROJECT\") | .components[] | select(.name == \"$COMPONENT\") | .wordpress.repositoryRevision) = \"$REVISION\"" -i "$VALUES_FILE"
        
        # Check if anything changed
        if git diff --quiet "$VALUES_FILE"; then
          echo "No changes needed in $VALUES_FILE"
          exit 0
        fi
        
        # Commit and push
        git config user.name "Tekton Pipeline"
        git config user.email "tekton@saritasa.com"
        git add "$VALUES_FILE"
        git commit -m "chore: update $PROJECT $COMPONENT repositoryRevision to $REVISION"
        git push origin "HEAD:$BRANCH"
        
        echo "Successfully updated and pushed $VALUES_FILE"
