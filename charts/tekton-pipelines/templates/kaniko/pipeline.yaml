{{ if .Values.kaniko.enabled }}
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: kaniko-build-pipeline
  namespace: {{ .Release.Namespace }}
spec:
  description: >-
    Pipeline will only build the image utilizing dockerfile using kaniko and then send notification via slack.
    The deployment is done via argocd

  params:
    {{- include "params.app" (dict "target" "pl") | nindent 4 }}
    {{- include "params.git" (dict "target" "pl") | nindent 4 }}
    {{- include "params.registry" (dict "target" "pl") | nindent 4 }}
    {{- include "params.docker" (dict "target" "pl") | nindent 4 }}
    {{- include "params.kubernetes" (dict "target" "pl") | nindent 4 }}
    {{- include "params.sentry" (dict "target" "pl" "sentry" $.Values.sentry.enabled) | nindent 4 }}

  workspaces:
    - name: app-source
    - name: k8s-source

  tasks:
    - name: git-clone-app-source
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.repository_ssh_url)
        - name: revision
          value: $(params.head_commit)
        - name: submodules
          value: $(params.repository_submodules)
      workspaces:
        - name: output
          workspace: app-source

    - name: kaniko
      taskRef:
        name: kaniko
      params:
        {{- include "bonds.app" (dict "source" "pl") | nindent 8 }}
        {{- include "bonds.registry" (dict "source" "pl") | nindent 8 }}
        {{- include "bonds.docker" (dict "source" "pl") | nindent 8 }}
      workspaces:
        - name: source
          workspace: app-source

    - name: git-clone-k8s-source
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.kubernetes_repository_ssh_url)
        - name: revision
          value: $(params.kubernetes_branch)
      workspaces:
        - name: output
          workspace: k8s-source

    - name: kustomize
      taskRef:
        name: kustomize
      workspaces:
        - name: source
          workspace: k8s-source
      params:
        {{- include "bonds.app" (dict "source" "pl") | nindent 8 }}
        {{- include "bonds.registry" (dict "source" "pl") | nindent 8 }}
        {{- include "bonds.kubernetes" (dict "source" "pl") | nindent 8 }}
      runAfter:
        - kaniko

    - name: deploy
      taskRef:
        name: argocd-deploy
      params:
        {{- include "bonds.app" (dict "source" "pl") | nindent 8 }}
      runAfter:
        - kustomize

    - name: sentry-release
      when:
        - input: "$(params.sentry_enabled)"
          operator: notin
          values: ["false"] 
      taskRef:
        name:  sentry-release
      params:
        {{- include "bonds.app" (dict "source" "pl") | nindent 8 }}
        {{- include "bonds.sentry" (dict "source" "pl") | nindent 8 }}
      workspaces:
        - name: source
          workspace: app-source
      runAfter:
        - deploy

    - name: post-deploy
      taskRef:
        name:  kaniko-post-deploy
      params:
        {{- include "bonds.app" (dict "source" "pl") | nindent 8 }}
        {{- include "bonds.git" (dict "source" "pl") | nindent 8 }}
        {{- include "bonds.registry" (dict "source" "pl") | nindent 8 }}
        {{- include "bonds.docker" (dict "source" "pl") | nindent 8 }}
        {{- include "bonds.kubernetes" (dict "source" "pl") | nindent 8 }}
        {{- include "bonds.sentry" (dict "source" "pl") | nindent 8 }}
      workspaces:
        - name: app-source
          workspace: app-source
        - name: k8s-source
          workspace: k8s-source
      runAfter:
        - deploy

  {{ include "pipeline.finalNotification" . | nindent 2 }}

{{ end }}
